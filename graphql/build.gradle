plugins {
    id 'org.springframework.boot' version '2.5.12'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'com.netflix.dgs.codegen' version '4.6.4'
}

group = 'com.zikozee'
version = '1.0'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    implementation(platform('com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:4.1.0'))
    implementation 'com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-extended-scalars'
    implementation 'com.netflix.graphql.dgs:graphql-dgs-subscriptions-websockets-autoconfigure'

    implementation 'com.github.javafaker:javafaker:1.0.2'
    implementation 'org.ocpsoft.prettytime:prettytime:5.0.2.Final'
    implementation 'org.bouncycastle:bcprov-jdk15on:1.70'

    runtimeOnly 'org.postgresql:postgresql'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

generateJava {
    packageName = 'com.zikozee.graphql.generated'
    typeMapping = ["Date"          : "java.time.LocalDate",
                   "NonNegativeInt": "java.lang.Integer",
                   "Url"           : "java.net.URL",
                   "DateTime": "java.time.OffsetDateTime"]
}