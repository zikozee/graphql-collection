scalar Url
scalar Date
scalar NonNegativeInt
scalar Long

union SmartSearchResult = Hello | Book

type Query {
    allHellos: [Hello]
    oneHello: Hello
    books(author: String): [Book]
    booksByReleased(releasedInput: ReleaseHistoryInput!): [Book]
    mobileApps(mobileAppFilter: MobileAppFilter): [MobileApp]
    pets(petFilter: PetFilter): [Pet]
    smartSearch(keyword: String): [SmartSearchResult]
}


type Mutation {
    addHello(helloInput: HelloInput!): Int
    replaceHelloText(helloInput: HelloInput!): [Hello]
#    replaceHelloText(number: Int!, newText: String!): [Hello]
    deleteHello(number: Int!): Int
}


# if the param is not ! (mandatory) use optional